{"version":3,"sources":["components/AddCategorie.js","components/GifGridItem.js","helpers/GetGif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","valueInput","setvalueInput","onSubmit","e","preventDefault","length","categories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","GetGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","isLoading","state","setState","useEffect","then","res","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAS,IACtBP,GAAc,SAACQ,GAAD,OAAiBN,GAAjB,mBAAgCM,OAC9CL,EAAc,MAOhB,SACE,uBAAOM,KAAK,OAAOC,MAAOR,EAAYS,SALhB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,a,QCXdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,sBAAKC,UAAU,6CAAf,UACE,4BAAIF,IACJ,qBAAKG,IAAKF,EAAKG,IAAKJ,Q,uBCNbK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACkCO,UACpDF,GAFkB,+DAIDG,MAAMR,GAJL,cAIdS,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,OAAQhB,EAAY,EAAZA,MACnC,MAAO,CACLe,GAAIA,EACJd,IAAKe,EAAOC,iBAAiBhB,IAC7BD,MAAOA,MAVS,kBAaba,GAba,4CAAH,sDCIJ,SAASK,EAAT,GAAgC,IAAbZ,EAAY,EAAZA,SAChC,ECH0B,SAACA,GAC3B,MAA0BnB,mBAAS,CACjCyB,KAAM,GACNO,WAAW,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRjB,EAAOC,GAAUiB,MAAK,SAACC,GACrBH,EAAS,CACPT,KAAMY,EACNL,WAAW,SAGd,CAACb,IAEGc,EDZ6BK,CAAanB,GAAnCU,EAAd,EAAQJ,KAAcO,EAAtB,EAAsBA,UAEtB,OACE,qCACE,oBAAIjB,UAAU,wCAAd,SAAuDI,IACtDa,GAAa,kBACd,qBAAKjB,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACY,GAAD,OACV,cAAC,EAAD,eAAgCA,GAAdA,EAAMX,YEV3B,IAAMY,EAAe,WAC1B,MAAoCxC,mBAAS,CAAC,aAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,6BACGQ,EAAWoB,KAAI,SAACR,GACf,OAAO,cAACY,EAAD,CAAwBZ,SAAUA,GAApBA,YCL/BsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.54bef7c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategorie = ({ setCategories }) => {\n  const [valueInput, setvalueInput] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (valueInput.length > 3) {\n      setCategories((categories) => [valueInput, ...categories]);\n      setvalueInput(\"\");\n    }\n  };\n  const handleInputChange = (e) => {\n    setvalueInput(e.target.value);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={valueInput} onChange={handleInputChange} />\n    </form>\n  );\n};\nAddCategorie.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInDown\">\n      <p>{title}</p>\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n","export const GetGif = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=AoFoTkxKPHX3mXe9F5iI9sC5Ynv7cfZz`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map(({ id, images, title }) => {\n    return {\n      id: id,\n      url: images.downsized_medium.url,\n      title: title,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport default function GifGrid({ category }) {\n  const { data: images, isLoading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\n      {isLoading && \"Loading data...\"}\n      <div className=\"card-grid\">\n        {images.map((image) => (\n          <GifGridItem key={image.id} {...image} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { GetGif } from \"../helpers/GetGif\";\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    GetGif(category).then((res) => {\n      setState({\n        data: res,\n        isLoading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategorie } from \"./components/AddCategorie\";\nimport GifGrid from \"./components/GifGrid\";\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Simpsons\"]);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategorie setCategories={setCategories} />\n      <ul>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category} />;\n        })}\n      </ul>\n    </>\n  );\n};\n// AoFoTkxKPHX3mXe9F5iI9sC5Ynv7cfZz\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n// Components\nimport {GifExpertApp} from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}